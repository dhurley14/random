#BlueJ class context
comment0.params=
comment0.target=void\ init()
comment0.text=\r\n\ Called\ by\ the\ browser\ or\ applet\ viewer\ to\r\n\ inform\ this\ JApplet\ that\ it\ has\r\n\ been\ loaded\ into\ the\ system.\ It\ \r\n\ is\ always\ called\ before\ the\ first\ time\r\n\ that\ the\ start\ method\ is\ called.\r\n
comment1.params=
comment1.target=void\ enterPlayers()
comment1.text=\r\n\ Creates\ a\ JOptionPane\ to\ select\ the\ number\ of\ \r\n\ players\ in\ the\ game\r\n\ \r\n\ @param\r\n\ @return\ void\r\n
comment10.params=
comment10.target=void\ finalScore()
comment10.text=\r\n\ Computes\ the\ final\ score.\ Called\ by\ nextPlayer().\r\n\ Determines\ the\ winner\ and\ the\ removes\ the\r\n\ mouse\ listener\ so\ a\ player\ cannot\ continue\ to\ click\r\n\ and\ affect\ the\ gameboard.\r\n\ \r\n\ \r\n
comment11.params=g
comment11.target=void\ paint(java.awt.Graphics)
comment11.text=\r\n\ Paint\ method\ for\ applet.\r\n\ \r\n\ @param\ g\r\n\ \ \ \ \ \ \ \ \ \ \ \ the\ Graphics\ object\ for\ this\ applet\r\n
comment12.params=e
comment12.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment13.params=route
comment13.target=void\ takeRoute(java.lang.String)
comment13.text=\r\n\ Method\ developed\ to\ handle\ the\ special\ \r\n\ cases\ of\ when\ a\ double\ route\ is\r\n\ selected.\r\n\ \r\n\ \r\n\ @param\ String\r\n\ \ \ \ \ \ \ \ \ \ \ \ route\r\n\ @return\ void\r\n
comment14.params=e
comment14.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment15.params=e
comment15.target=void\ mouseExited(java.awt.event.MouseEvent)
comment16.params=e
comment16.target=void\ mousePressed(java.awt.event.MouseEvent)
comment17.params=e
comment17.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment18.params=
comment18.target=void\ start()
comment18.text=\r\n\ Called\ by\ the\ browser\ or\ applet\ viewer\ to\ \r\n\ inform\ this\ JApplet\ that\ it\r\n\ should\ start\ its\ execution.\ It\ is\ called\ \r\n\ after\ the\ init\ method\ and\ each\r\n\ time\ the\ JApplet\ is\ revisited\ in\ a\ Web\ page.\r\n
comment19.params=
comment19.target=void\ stop()
comment19.text=\r\n\ Called\ by\ the\ browser\ or\ applet\ viewer\ to\ \r\n\ inform\ this\ JApplet\ that\ it\r\n\ should\ stop\ its\ execution.\ It\ is\ called\ \r\n\ when\ the\ Web\ page\ that\ contains\r\n\ this\ JApplet\ has\ been\ replaced\ by\ another\ \r\n\ page,\ and\ also\ just\ before\ the\r\n\ JApplet\ is\ to\ be\ destroyed.\r\n
comment2.params=
comment2.target=void\ enterNames()
comment2.text=\r\n\ JOptionPane\ with\ input\ to\ get\ the\ names\ of\ the\ players\r\n\ \r\n\ @param\r\n\ @return\ void\r\n\ \r\n
comment20.params=
comment20.target=void\ destroy()
comment20.text=\r\n\ Called\ by\ the\ browser\ or\ applet\ viewer\ to\ \r\n\ inform\ this\ JApplet\ that\ it\ is\r\n\ being\ reclaimed\ and\ that\ it\ should\ destroy\ \r\n\ any\ resources\ that\ it\ has\r\n\ allocated.\ The\ stop\ method\ will\ always\ be\ \r\n\ called\ before\ destroy.\r\n
comment21.params=
comment21.target=java.lang.String\ getAppletInfo()
comment21.text=\r\n\ Returns\ information\ about\ this\ applet.\ \r\n\ An\ applet\ should\ override\ this\r\n\ method\ to\ return\ a\ String\ containing\ \r\n\ information\ about\ the\ author,\r\n\ version,\ and\ copyright\ of\ the\ JApplet.\r\n\ \r\n\ @return\ a\ String\ representation\ of\ information\ \r\n\ about\ this\ JApplet\r\n
comment22.params=
comment22.target=java.lang.String[][]\ getParameterInfo()
comment22.text=\r\n\ Returns\ parameter\ information\ about\ this\ JApplet.\ \r\n\ Returns\ information\r\n\ about\ the\ parameters\ than\ are\ understood\ by\ this\ \r\n\ JApplet.\ An\ applet\r\n\ should\ override\ this\ method\ to\ return\ an\ array\ of\ \r\n\ Strings\ describing\r\n\ these\ parameters.\ Each\ element\ of\ the\ array\ should\ \r\n\ be\ a\ set\ of\ three\r\n\ Strings\ containing\ the\ name,\ the\ type,\ and\ a\ description.\r\n\ \r\n\ @return\ a\ String[]\ representation\ of\ parameter\ \r\n\ information\ about\ this\r\n\ \ \ \ \ \ \ \ \ JApplet\r\n
comment3.params=
comment3.target=void\ gamePlay()
comment3.text=\r\n\ Called\ by\ nextPlayer()\ to\ see\ if\ lastRound\ was\ \r\n\ set\ to\ true\ or\ the\ current\ player\ has\ two\ or\ less\ trains\ left\r\n\ \r\n\ @param\r\n\ @return\ void\r\n\ \r\n
comment4.params=
comment4.target=void\ setCities()
comment4.text=\r\n\ called\ by\ init()\ This\ adds\ rectangles\ behind\r\n\ the\ cities\ so\ that\ the\ program\ know's\ where\ the\ user\ has\ clicked.\r\n\ \r\n\ @param\r\n\ @return\ void\r\n
comment5.params=
comment5.target=void\ setUpCards()
comment5.text=\r\n\ Called\ by\ init().\ this\ creats\ rectangles\ behind\ \r\n\ the\ train\ cards\ that\ are\ drawn\ at\ game\ time.\r\n\ \r\n\ \r\n
comment6.params=
comment6.target=Player\ currentPlayer()
comment6.text=\r\n\ Acquires\ the\ player\ who's\ turn\ it\ currently\ is.\r\n\ \r\n\ @param\r\n\ @return\ Player\r\n
comment7.params=
comment7.target=void\ nextPlayer()
comment7.text=\r\n\ Sets\ the\ currentplayer\ to\ whoever's\ turn\ it\ is\r\n\ \r\n\ \r\n
comment8.params=
comment8.target=void\ firstRound()
comment8.text=\r\n\ Called\ by\ init().\ Begins\ the\ game\ by\ dealing\ out\ \r\n\ cards\ to\ players,\ in\ the\ order\ of\ their\ turns,\ \r\n\ beginning\ with\ playerOne.\r\n\ \r\n\ \r\n
comment9.params=
comment9.target=void\ lastRound()
comment9.text=\r\n\ Called\ by\ gamePlay().\ sets\ playCount\ so\ that\ \r\n\ each\ player\ has\ one\ turn\ left.\r\n\ \r\n
numComments=23
